package Model;
// Generated 25 juil. 2015 19:43:56 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.FetchType;
import org.codehaus.jackson.annotate.JsonIgnoreProperties; 
 

/**
 * Reservation generated by hbm2java
 */
@Entity
@Table(name = "reservation", catalog = "ghl")
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"}) 
public class Reservation implements java.io.Serializable {

	private Integer idreserv;
	private Hotel hotel;
	private Client client;
	private Chambres chambres;
	private Date datereserv;
	private Date datearr;
	private Date datesort;
	private Integer nbrsingle;
	private Integer nbrdouble;
	private Integer nbrsweet;
	private Integer total;
	private Set<Facture> facture= new HashSet<Facture>(0);
	public Reservation() {
	}

	public Reservation(Integer idreserv, Hotel hotel, Client client, Chambres chambres, Date datereserv, Date datearr,
			Date datesort) {
		this.idreserv=idreserv;
		this.hotel = hotel;
		this.client =client;
		this.chambres = chambres;
		this.datereserv = datereserv;
		this.datearr = datearr;
		this.datesort = datesort;
		
	}
	
	public Reservation(Integer idreserv, Hotel hotel, Client client, Chambres chambres, Date datereserv, Date datearr,
			Date datesort, Set<Facture> facture) {
		this.idreserv=idreserv;
		this.hotel = hotel;
		this.client =client;
		this.chambres = chambres;
		this.datereserv = datereserv;
		this.datearr = datearr;
		this.datesort = datesort;
		this.facture=facture;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idreserv", unique = true, nullable = false)
	public Integer getIdreserv() {
		return this.idreserv;
	}

	public void setIdreserv(Integer idreserv) {
		this.idreserv = idreserv;
	}
	
	
	@Column(name = "nbrsingle")
	public Integer getNbrsingle() {
		return this.nbrsingle;
	}

	public void setNbrsingle(Integer nbrsingle) {
		this.nbrsingle = nbrsingle;
	}
	
	@Column(name = "nbrdouble")
	public Integer getNbrdouble() {
		return this.nbrdouble;
	}

	public void setNbrdouble(Integer nbrdouble) {
		this.nbrdouble = nbrdouble;
	}
	
	@Column(name = "nbrsweet")
	public Integer getNbrsweet() {
		return this.nbrsweet;
	}

	public void setNbrsweet(Integer nbrsweet) {
		this.nbrsweet = nbrsweet;
	}
	
	
	@Column(name = "total")
	public Integer getTotal() {
		return this.total;
	}

	public void setTotal(Integer total) {
		this.total = total;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idhotel", nullable = false)
	public Hotel getHotel() {
		return this.hotel;
	}

	public void setHotel(Hotel hotel) {
		this.hotel = hotel;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idclient", nullable = false)
	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idchambre", nullable = false)
	public Chambres getChambres() {
		return this.chambres;
	}

	public void setChambres(Chambres chambres) {
		this.chambres = chambres;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datereserv", length = 10)
	public Date getDatereserv() {
		return this.datereserv;
	}

	public void setDatereserv(Date datereserv) {
		this.datereserv = datereserv;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datearr", length = 10)
	public Date getDatearr() {
		return this.datearr;
	}

	public void setDatearr(Date datearr) {
		this.datearr = datearr;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datesort", length = 10)
	public Date getDatesort() {
		return this.datesort;
	}

	public void setDatesort(Date datesort) {
		this.datesort = datesort;
	}
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "reservation")
	public Set<Facture> getFacture() {
		return this.facture;
	}

	public void setFacture(Set<Facture> facture) {
		this.facture = facture;
	}

}
